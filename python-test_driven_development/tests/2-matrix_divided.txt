The 'example' module
====================

Using 'Div'
----------------

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

correct input
>>> matrix = [[1, 2.5, 3], [4.5, 5, 6.5]]
>>> matrix0 = [[1.5, 2.5, 3.5], [4.5, 5.5, 6.5]]
>>> matrix1 = [[1, 2, 3], [4, 5, 6]]
>>> matrix2 = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

>>> matrix_divided(matrix, 2)
[[0.5, 1.25, 1.5], [2.25, 2.5, 3.25]]

>>> matrix_divided(matrix0, 2)
[[0.75, 1.25, 1.75], [2.25, 2.75, 3.25]]

>>> matrix_divided(matrix1, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided(matrix2, 4.5)
[[0.22, 0.44, 0.67], [0.89, 1.11, 1.33], [1.56, 1.78, 2.0]]

>>> matrix_divided(matrix1, -2)
[[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]

error input
>>> matrix3 = [42, [2, 5], [1, 2, 3]]
>>> matrix4 = [[1, 2], [3, 4, 5]]
>>> matrix5 = [[10, 8], 5]
>>> matrix6 = [[1, 2, "e"], [4, 5, 6]]
>>> matrix7 = [[1, 2, 3, 4], [5, 6, 7, 8, 9, 10], [11, 12, 13]]
>>> matrix8 = [1, 2, 3]
>>> empty_list = []
>>> empty_lists = [[], [], []]

>>> matrix_divided(matrix3, 1)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(matrix4, 5)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided(matrix5, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(matrix6, 6)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(matrix7, 3)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided(matrix8, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(empty_list, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(empty_lists, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(matrix1, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

>>> matrix_divided(matrix1, "e")
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix_divided(None, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(matrix1, None)
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix_divided(None, None)
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix_divided(3, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided("e", 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided()
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix_divided([[5.7, 8.1], [7.7, 4.9]], [2])
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix_divided(matrix1, )
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided(matrix1, 2, 5)
Traceback (most recent call last):
    ...
TypeError: matrix_divided() takes 2 positional arguments but 3 were given