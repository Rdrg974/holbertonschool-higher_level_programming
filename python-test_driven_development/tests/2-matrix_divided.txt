The 'example' module
====================

Using 'Div'
----------------

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix1 = [[1, 2, 3], [4, 5, 6]]
>>> matrix2 = [[1, 2, "e"], [4, 5, 6]]
>>> matrix3 = [[1, 2], [3, 4, 5]]
>>> matrix4 = [[10, 8], 5]
>>> empty_list = []
>>> empty_lists = [[], [], []]

>>> matrix_divided(matrix1, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided(matrix1, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

>>> matrix_divided(matrix1, 4.5)
[[0.22, 0.44, 0.67], [0.89, 1.11, 1.33]]

>>> matrix_divided(matrix2, 1)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(matrix3, 5)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided(matrix1, "e")
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix_divided(None, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(empty_list, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(empty_lists, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(matrix4, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats